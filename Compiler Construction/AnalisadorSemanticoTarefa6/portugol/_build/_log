### Starting build.
# Target: semanticoTest.ml.depends, tags: { extension:ml, file:semanticoTest.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules semanticoTest.ml > semanticoTest.ml.depends # cached
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o ast.cmo ast.ml # cached
# Target: lexer.mll, tags: { extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, package(menhirLib), quiet }
/usr/bin/ocamllex -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly.depends, tags: { extension:mly, file:parser.mly, infer, menhir_ocamldep, ocaml, ocamldep, package(menhirLib), quiet }
menhir --table --raw-depend --ocamldep 'ocamlfind ocamldep -modules' parser.mly > parser.mly.depends # cached
# Target: sast.ml.depends, tags: { extension:ml, file:sast.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules sast.ml > sast.ml.depends # cached
# Target: sast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:sast.cmo, file:sast.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o sast.cmo sast.ml # cached
# Target: parser.mly, tags: { byte, compile, extension:ml, extension:mly, file:parser.ml, file:parser.mly, infer, menhir, ocaml, package(menhirLib), parser, quiet }
menhir --table --ocamlc 'ocamlfind ocamlc -package menhirLib' --infer parser.mly # cached
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o lexer.cmo lexer.ml # cached
# Target: semantico.mli.depends, tags: { extension:mli, file:semantico.mli, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules semantico.mli > semantico.mli.depends # cached
# Target: ambiente.mli.depends, tags: { extension:mli, file:ambiente.mli, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules ambiente.mli > ambiente.mli.depends # cached
# Target: ambiente.cmi, tags: { byte, compile, extension:mli, file:ambiente.mli, interf, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o ambiente.cmi ambiente.mli # cached
# Target: tast.ml.depends, tags: { extension:ml, file:tast.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules tast.ml > tast.ml.depends # cached
# Target: tast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:tast.cmo, file:tast.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o tast.cmo tast.ml # cached
# Target: semantico.cmi, tags: { byte, compile, extension:mli, file:semantico.mli, interf, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o semantico.cmi semantico.mli # cached
# Target: semanticoTest.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:semanticoTest.cmo, file:semanticoTest.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o semanticoTest.cmo semanticoTest.ml # cached
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:parser.cmo, file:parser.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o parser.cmo parser.ml # cached
# Target: semantico.ml.depends, tags: { extension:ml, file:semantico.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules semantico.ml > semantico.ml.depends
# Target: semantico.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:semantico.cmo, file:semantico.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o semantico.cmo semantico.ml
+ ocamlfind ocamlc -c -package menhirLib -o semantico.cmo semantico.ml
File "semantico.ml", line 203, characters 2-5795:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Escolha (_, _, _)
# Target: ambiente.ml.depends, tags: { extension:ml, file:ambiente.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules ambiente.ml > ambiente.ml.depends # cached
# Target: tabsimb.mli.depends, tags: { extension:mli, file:tabsimb.mli, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules tabsimb.mli > tabsimb.mli.depends # cached
# Target: tabsimb.cmi, tags: { byte, compile, extension:mli, file:tabsimb.mli, interf, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o tabsimb.cmi tabsimb.mli # cached
# Target: ambiente.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ambiente.cmo, file:ambiente.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o ambiente.cmo ambiente.ml # cached
# Target: tabsimb.ml.depends, tags: { extension:ml, file:tabsimb.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules tabsimb.ml > tabsimb.ml.depends # cached
# Target: tabsimb.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:tabsimb.cmo, file:tabsimb.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o tabsimb.cmo tabsimb.ml # cached
# Target: semanticoTest.byte, tags: { byte, dont_link_with, extension:byte, file:semanticoTest.byte, link, ocaml, package(menhirLib), program, quiet }
ocamlfind ocamlc -linkpkg -package menhirLib ast.cmo sast.cmo parser.cmo lexer.cmo tabsimb.cmo ambiente.cmo tast.cmo semantico.cmo semanticoTest.cmo -o semanticoTest.byte # cached
# Compilation successful.
