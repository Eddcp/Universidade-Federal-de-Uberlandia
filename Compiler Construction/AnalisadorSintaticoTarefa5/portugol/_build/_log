### Starting build.
# Target: sintaticoTest.ml.depends, tags: { extension:ml, file:sintaticoTest.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules sintaticoTest.ml > sintaticoTest.ml.depends # cached
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o ast.cmo ast.ml # cached
# Target: erroSint.ml.depends, tags: { extension:ml, file:erroSint.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules erroSint.ml > erroSint.ml.depends # cached
# Target: erroSint.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:erroSint.cmo, file:erroSint.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o erroSint.cmo erroSint.ml # cached
# Target: lexer.mll, tags: { extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, package(menhirLib), quiet }
/usr/bin/ocamllex -q lexer.mll
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules lexer.ml > lexer.ml.depends
# Target: parser.mly.depends, tags: { extension:mly, file:parser.mly, infer, menhir_ocamldep, ocaml, ocamldep, package(menhirLib), quiet }
menhir --table --raw-depend --ocamldep 'ocamlfind ocamldep -modules' parser.mly > parser.mly.depends # cached
# Target: parser.mly, tags: { byte, compile, extension:ml, extension:mly, file:parser.ml, file:parser.mly, infer, menhir, ocaml, package(menhirLib), parser, quiet }
menhir --table --ocamlc 'ocamlfind ocamlc -package menhirLib' --infer parser.mly # cached
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o lexer.cmo lexer.ml
# Target: sintaticoTest.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:sintaticoTest.cmo, file:sintaticoTest.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o sintaticoTest.cmo sintaticoTest.ml # cached
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, package(menhirLib), quiet }
ocamlfind ocamldep -package menhirLib -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:parser.cmo, file:parser.ml, implem, ocaml, package(menhirLib), quiet }
ocamlfind ocamlc -c -package menhirLib -o parser.cmo parser.ml # cached
# Target: sintaticoTest.byte, tags: { byte, dont_link_with, extension:byte, file:sintaticoTest.byte, link, ocaml, package(menhirLib), program, quiet }
ocamlfind ocamlc -linkpkg -package menhirLib ast.cmo erroSint.cmo parser.cmo lexer.cmo sintaticoTest.cmo -o sintaticoTest.byte # cached
# Compilation successful.
